<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
	<head>
		<meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
		<title>CWRCWriter</title>
		
		<script type="text/javascript" src="js/config.js"></script>
		<script type="text/javascript" src="js/lib/require/require.js"></script>

		<link type="text/css" rel="stylesheet" href="css/style.css" />
		<link type="text/css" rel="stylesheet" href="css/islandora_style.css" />
		
		<link type="text/css" rel="stylesheet" href="css/cwrcstyle/jquery-ui.css" />
		<link type="text/css" rel="stylesheet" href="css/layout-default-latest.css" />
		<link type="text/css" rel="stylesheet" href="js/lib/snippet/jquery.snippet.css" />
		
		<link type="text/css" rel="stylesheet" href="js/lib/cwrcDialogs/css/bootstrap.css" />
        <link type="text/css" rel="stylesheet" href="js/lib/cwrcDialogs/css/datepicker.css" />
        <link type="text/css" rel="stylesheet" href="js/lib/cwrcDialogs/fonts/font-awesome/css/font-awesome.min.css" />
        <link type="text/css" rel="stylesheet" href="js/lib/cwrcDialogs/css/cD.css" />

		<style type="text/css">
			#cwrc_main {
				height: 100%;
				width: 100%;
			}
		</style>

		<script type="text/javascript">
			require.config({baseUrl: 'js'});
	        
	        // and the 'jquery-private' module, in the
	        // jquery-private.js file:
	        define('jquery-private', ['jquery'], function ($) {
	            return $.noConflict(true);
	        });
	
	        require(['jquery', 'knockout'], function($, knockout) {
	            window.ko = knockout; // requirejs shim isn't working for knockout
	            
	            require(['writer',
	                     'delegator'
	            ], function(Writer, Delegator) {
	                $(function() {
	                    cwrcWriterInit.call(window, $, Writer, Delegator);
	                });
	            });
	        });
	        
			function cwrcWriterInit($, Writer, Delegator) {
			    cwrc_params = {};
                
                writer = null;
                
                function doResize() {
                    var uiHeight = 4;
                    var toolbar = $('.mce-toolbar-grp',writer.editor.getContainer());
                    if (toolbar.is(':visible')) {
                        uiHeight += toolbar.outerHeight();
                    }
                    $('iframe',writer.editor.getContainer()).height($(window).height() - uiHeight);
                }
                
                function doInit(config) {
                    config.delegator = Delegator;
                    config.buttons1 = 'schematags,removeTag,|,addperson,addplace,|,viewsource',
                    writer = new Writer(config);
                    writer.init('editor');
                    writer.event('writerInitialized').subscribe(function(writer) {
                        writer.fileManager.loadInitialDocument(window.location.hash);
                    });
                    writer.event('writerInitialized').subscribe(doResize);
                    $(window).on('resize', doResize);
                }
                
                (function() {
                    var configXHR = $.ajax({url: 'js/writerConfig.js', dataType: 'json'});
                    var projectXHR = $.ajax({url: 'http://apps.testing.cwrc.ca/editor/documents/info/projectname'});
                    $.when(
                        configXHR,
                        projectXHR
                    ).then(function(config, project) {
                        config = config[0];
                        project = project[0];
                        config.project = project;
                        config.cwrcRootUrl = window.location.protocol+'//'+window.location.host+window.location.pathname.replace(window.location.pathname.split('/').pop(),'');
                        doInit(config);
                    },function(xhr) {
                        if (configXHR.state() === 'resolved') {
                            var config = $.parseJSON(configXHR.responseText);
                            config.cwrcRootUrl = window.location.protocol+'//'+window.location.host+window.location.pathname.replace(window.location.pathname.split('/').pop(),'');
                            doInit(config);
                        } else {
                            alert('Error loading writerConfig.js');
                        }
                    });
                }());
			};
		</script>
	</head>
<body>
<div id="cwrc_wrapper">
	<div id="cwrc_main">
		<form method="post" action="">
			<textarea id="editor" name="editor" class="tinymce"></textarea>
		</form>
	</div>
</div>
</body>
</html>